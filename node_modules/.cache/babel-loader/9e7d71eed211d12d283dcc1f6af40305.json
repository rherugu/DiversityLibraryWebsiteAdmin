{"ast":null,"code":"var _jsxFileName = \"/Users/raghavvherugu/Projects/DiversityLibraryWebsite-main/src/components/Login.js\";\nimport React, { Component } from \"react\";\nimport \"./styles/Login.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      goBack: false\n    };\n  }\n\n  componentDidMount() {\n    try {\n      if (this.props.route.params.loggedOut === \"Logout\") {\n        localStorage.removeItem(\"token\");\n      }\n\n      if (this.props.route.params.bookLogin === true) {\n        this.setState({\n          goBack: true\n        });\n      }\n    } catch (error) {}\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fname\",\n          className: \"input\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fname\",\n          name: \"fname\",\n          className: \"loginInput\",\n          value: this.state.email,\n          onChange: e => this.setState({\n            email: e.target.value\n          }),\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pw\",\n          className: \"input\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"pw\",\n          name: \"pw\",\n          className: \"loginInput\",\n          value: this.state.password,\n          onChange: e => this.setState({\n            password: e.target.value\n          }),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          icon: \"login\",\n          mode: \"outlined\",\n          onClick: async () => {\n            this.setState({\n              loading: true\n            });\n            await axios.post(\"http://localhost:3000/login/admin\", {\n              email: this.state.email,\n              password: this.state.password\n            }).then(async res => {\n              if (res.data.status === \"success\") {\n                alert(\"Successfully logged in!\");\n                await localStorage.setItem(\"loggedIn\", true);\n                this.props.history.push(\"/books\");\n              } else {\n                alert(\"Incorrect email/password\");\n                await localStorage.setItem(\"loggedIn\", false);\n              }\n            }).catch(err => {\n              console.error(err);\n              this.setState({\n                loading: false\n              });\n              alert(\"Incorrect email or password. If you are sure it is correct, please check your internet connection and retry typing.\");\n            });\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/raghavvherugu/Projects/DiversityLibraryWebsite-main/src/components/Login.js"],"names":["React","Component","axios","LoginScreen","constructor","props","state","email","password","loading","goBack","componentDidMount","route","params","loggedOut","localStorage","removeItem","bookLogin","setState","error","render","e","target","value","post","then","res","data","status","alert","setItem","history","push","catch","err","console"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles/Login.css\";\nimport axios from \"axios\";\n\nclass LoginScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      goBack: false,\n    };\n  }\n\n  componentDidMount() {\n    try {\n      if (this.props.route.params.loggedOut === \"Logout\") {\n        localStorage.removeItem(\"token\");\n      }\n      if (this.props.route.params.bookLogin === true) {\n        this.setState({\n          goBack: true,\n        });\n      }\n    } catch (error) {}\n  }\n\n  render() {\n    return (\n      <div className=\"body\">\n        <div>\n          <h1 className=\"title\">Login</h1>\n          <label htmlFor=\"fname\" className=\"input\">\n            Username:\n          </label>\n          <input\n            type=\"text\"\n            id=\"fname\"\n            name=\"fname\"\n            className=\"loginInput\"\n            value={this.state.email}\n            onChange={(e) => this.setState({ email: e.target.value })}\n            placeholder=\"Email\"\n          />\n          <label htmlFor=\"pw\" className=\"input\">\n            Password:\n          </label>\n          <input\n            type=\"password\"\n            id=\"pw\"\n            name=\"pw\"\n            className=\"loginInput\"\n            value={this.state.password}\n            onChange={(e) => this.setState({ password: e.target.value })}\n            placeholder=\"Password\"\n          />\n          <br />\n          <br />\n          <button\n            className=\"btn btn-danger\"\n            icon=\"login\"\n            mode=\"outlined\"\n            onClick={async () => {\n              this.setState({\n                loading: true,\n              });\n              await axios\n                .post(\"http://localhost:3000/login/admin\", {\n                  email: this.state.email,\n                  password: this.state.password,\n                })\n                .then(async (res) => {\n                  if (res.data.status === \"success\") {\n                    alert(\"Successfully logged in!\");\n                    await localStorage.setItem(\"loggedIn\", true);\n                    this.props.history.push(\"/books\");\n                  } else {\n                    alert(\"Incorrect email/password\");\n                    await localStorage.setItem(\"loggedIn\", false);\n                  }\n                })\n                .catch((err) => {\n                  console.error(err);\n                  this.setState({\n                    loading: false,\n                  });\n                  alert(\n                    \"Incorrect email or password. If you are sure it is correct, please check your internet connection and retry typing.\"\n                  );\n                });\n            }}\n          >\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}